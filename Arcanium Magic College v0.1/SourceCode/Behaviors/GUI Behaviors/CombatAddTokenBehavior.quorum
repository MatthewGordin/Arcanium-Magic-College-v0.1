use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Game.Game
use Libraries.Containers.Array
use Libraries.Interface.Item2D
use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Color
use Libraries.Interface.Controls.Button
use Libraries.Game.Graphics.Label

class CombatAddTokenBehavior is Behavior
    
    Game game
    Battle battle
    CombatRemoveTokenBehavior removeBehavior
    Array<CombatAddTokenBehavior> otherBehaviors
    Array<Drawable> tokenDrawables
    Array<Label> labels
    Array<MenuButton> buttons
    MenuButton doneButton
    integer maxTokens = 0
    integer currentTokens = 0
    integer spellID = 0
    integer elementID = 0

    constant integer fire = 100000
    constant integer water = 10000
    constant integer earth = 1000
    constant integer wind = 100
    constant integer light = 10
    constant integer dark = 1

    action Run(BehaviorEvent event)
        spellID = spellID + elementID

        Color color

        if elementID < 0
            currentTokens = currentTokens - 1
        end

        if elementID = fire
            tokenDrawables:Get(currentTokens):LoadFilledCircle(20, color:Red())
        elseif elementID = water
            tokenDrawables:Get(currentTokens):LoadFilledCircle(20, color:Blue())
        elseif elementID = earth
            tokenDrawables:Get(currentTokens):LoadFilledCircle(20, color:CustomColor(0.686, 0.424, 0.243, 1))
        elseif elementID = wind
            tokenDrawables:Get(currentTokens):LoadFilledCircle(20, color:Green())
        elseif elementID = light
            tokenDrawables:Get(currentTokens):LoadFilledCircle(20, color:Yellow())
        elseif elementID = dark
            tokenDrawables:Get(currentTokens):LoadFilledCircle(20, color:Black())
        elseif elementID < 0
            tokenDrawables:Get(currentTokens):LoadCircle(20)
        end

        if elementID > 0
            currentTokens = currentTokens + 1
        end

        integer counter = 0

        repeat while counter < otherBehaviors:GetSize()
            otherBehaviors:Get(counter):SetSpellID(spellID)
            otherBehaviors:Get(counter):SetCurrentTokens(currentTokens)

            counter = counter + 1
        end
        removeBehavior:SetSpellID(spellID)
        removeBehavior:SetCurrentTokens(currentTokens)
        removeBehavior:SetElementID(elementID)

        Spell tempSpell
        tempSpell:FillSpell(spellID)

        text multiTarget = ""
        if tempSpell:GetMultiTarget()
            multiTarget = "Yes"
        else
            multiTarget = "No"
        end

        counter = 0
        repeat while counter < buttons:GetSize()
            buttons:Get(counter):SetName("Current Spell:, Name: " + tempSpell:GetName() + ", Base Damage: " + tempSpell:GetBaseDamage() 
                                + ", Mana Cost: " + tempSpell:GetManaCost() + ", Multi-target: " + multiTarget + ".")

            counter = counter + 1
        end

        labels:Get(0):SetText("Name: " + tempSpell:GetName())
        labels:Get(1):SetText("Base Damage: " + tempSpell:GetBaseDamage())
        labels:Get(2):SetText("Mana Cost: " + tempSpell:GetManaCost())
        labels:Get(3):SetText("Multi-target: " + multiTarget)

        if currentTokens = maxTokens
            doneButton:Activate()
        end
    end

    action SetRemoveBehavior(CombatRemoveTokenBehavior newBehavior)
        removeBehavior = newBehavior
    end

    action SetButtons(Array<MenuButton> newButtons)
        buttons = newButtons
    end

    action SetDoneButton(MenuButton button)
        doneButton = button
    end

    action SetElementID(integer newID)
        elementID = newID
    end

    action SetSpellID(integer newID)
        spellID = newID
    end

    action GetSpellID returns integer
        return spellID
    end

    action SetMaxTokens(integer newMax)
        maxTokens = newMax
    end

    action SetCurrentTokens(integer newTokens)
        currentTokens = newTokens
    end

    action SetTokenDrawables(Array<Drawable> newArray)
        tokenDrawables = newArray
    end

    action SetOtherBehaviors(Array<CombatAddTokenBehavior> newArray)
        otherBehaviors = newArray
    end

    action SetLabels(Array<Label> newArray)
        labels = newArray
    end
end